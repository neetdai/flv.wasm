// AAC
pub struct AAC {
    pub codec: &'static str,
    pub channelCount: usize
}


/// # 静音填充表
/// 
pub const MP4_1: [u8; 6] = [
    0x00, 0xc8, 0x00, 0x80, 
    0x23, 0x80
];

pub const MP4_2: [u8; 9] = [
    0x21, 0x00, 0x49, 0x90, 
    0x02, 0x19, 0x00, 0x23, 
    0x80
];

pub const MP4_3: [u8; 13] = [
    0x00, 0xc8, 0x00, 0x80, 
    0x20, 0x84, 0x01, 0x26, 
    0x40, 0x08, 0x64, 0x00, 
    0x8e
];

pub const MP4_4: [u8; 18] = [
    0x00, 0xc8, 0x00, 0x80, 
    0x20, 0x84, 0x01, 0x26, 
    0x40, 0x08, 0x64, 0x00, 
    0x80, 0x2c, 0x80, 0x08, 
    0x02, 0x38
];

pub const MP4_5: [u8; 21] = [
    0x00, 0xc8, 0x00, 0x80, 
    0x20, 0x84, 0x01, 0x26, 
    0x40, 0x08, 0x64, 0x00, 
    0x82, 0x30, 0x04, 0x99, 
    0x00, 0x21, 0x90, 0x02, 
    0x38
];

pub const MP4_6: [u8; 26] = [
    0x00, 0xc8, 0x00, 0x80, 
    0x20, 0x84, 0x01, 0x26, 
    0x40, 0x08, 0x64, 0x00, 
    0x82, 0x30, 0x04, 0x99, 
    0x00, 0x21, 0x90, 0x02, 
    0x00, 0xb2, 0x00, 0x20, 
    0x08, 0xe0
];

pub const SOME_1: [u8; 59] = [
    0x1, 0x40, 0x22, 0x80, 
    0xa3, 0x4e, 0xe6, 0x80, 
    0xba, 0x8, 0x0, 0x0, 
    0x0, 0x1c, 0x6, 0xf1, 
    0xc1, 0xa, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5e
];

pub const SOME_2: [u8; 59] = [
    0x1, 0x40, 0x22, 0x80, 
    0xa3, 0x5e, 0xe6, 0x80, 
    0xba, 0x8, 0x0, 0x0, 
    0x0, 0x0, 0x95, 0x0, 
    0x6, 0xf1, 0xa1, 0xa, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5e
];

pub const SOME_3: [u8; 59] = [
    0x1, 0x40, 0x22, 0x80, 
    0xa3, 0x5e, 0xe6, 0x80, 
    0xba, 0x8, 0x0, 0x0, 
    0x0, 0x0, 0x95, 0x0, 
    0x6, 0xf1, 0xa1, 0xa, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a,
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5a, 0x5a, 
    0x5a, 0x5a, 0x5e
];


impl AAC {

    /// # 获取静音填充盒子
    /// 
    /// ```
    /// let handle = AAC { codec: "mp4a.40.2", channelCount: 1 };
    /// handle.get_silent_frame();
    /// ```
    pub fn get_silent_frame (&self) -> Option<Vec<u8>> {
        match self.codec {
            "mp4a.40.2" => match self.channelCount {
                1 => Some(MP4_1.to_vec()),
                2 => Some(MP4_2.to_vec()),
                3 => Some(MP4_3.to_vec()),
                4 => Some(MP4_4.to_vec()),
                5 => Some(MP4_5.to_vec()),
                6 => Some(MP4_6.to_vec()),
                _ => None
            },
            _ => match self.channelCount {
                1 => Some(SOME_1.to_vec()),
                2 => Some(SOME_2.to_vec()),
                3 => Some(SOME_3.to_vec()),
                _ => None
            }
        }
    }
}